http                      =  $Options["HTTPHandler"];
AppEvent                  =  $Options["AppEvent"];
ExtensionTemplates        =  $Options["ExtensionTemplates"];

Head        = ImportComponent["Components/Head.wlx"];

Notifications  = ImportComponent["Components/Notifications/Notifications.wlx"];

Alert           = ImportComponent["Components/Alert.wlx"];
Modals           = ImportComponent["Components/Modals/Modals.wlx"];

{Settings, SettingsScript, Initialization}           = ImportComponent["Views/Settings/Settings.wlx"];

ExtensionsJS = (StringJoin["/", FileNameToURLPath[#]]) &/@ WLJSPackages`Includes["js"];
ExtensionsStyles = With[{Path = StringJoin["/", FileNameToURLPath[#]]},
  <link rel="stylesheet" href="{Path}"/> 
] &/@ WLJSPackages`Includes["styles"] // ToStringRiffle;

settings = <||>;

{loadSettings, storeSettings}        = ImportComponent["Settings.wl"];


loadSettings[settings];

App[request_] := With[{
        Secret = CreateUUID[], 
        GlobalControls  = CreateUUID[],
        ModalController = CreateUUID[],
        isElectron = ElectronQ[request],
        cachedClient = Unique["cachedClient"],
        GlobalMessanger = CreateUUID[],
        OnLoad = CreateUUID[],
        accentColor = With[{c = Lookup[settings, "AccentColor", "System"]}, If[c === "System", Lookup[System`$Env, "AccentColor", "#008855"], c]],
        NavigatorOS = If[KeyExistsQ[#, "AppOS"], #["AppOS"], "Browser"] &@ request["Headers"],
        GlobalParameters = <|"ElectronQ" -> ElectronQ[request], "AccentColor"->"teal"|>
    },

    EventHandler[OnLoad, Function[Null,
      cachedClient = $Client;
      EventRemove[OnLoad];

      With[{socket = EventClone[$Client]},
        EventHandler[socket, {"Closed" -> Function[Null,
          EventRemove[socket];  
          Echo["Settings >> Destroy"];
          EventRemove[Secret];
          EventRemove[GlobalControls];
          EventRemove[ModalController];
          EventRemove[GlobalMessanger];
          ClearAll[cachedClient];
        ]}]
      ];      
    ]];

    (* /* redirect to extensions  */ *)
    EventHandler[EventClone[GlobalMessanger], {
      any_ :> (EventFire[AppEvent, Messanger[any], #]&)
    }];

    (* /* redirect to extensions  */ *)
    EventHandler[EventClone[GlobalControls], {
      any_ :> (EventFire[AppEvent, any, #]&)
    }]; 

    <html class="h-full" os="{NavigatorOS}"> 
        <Head AccentColor={accentColor} Title={"Settings"}>
            <meta charset="utf-8"/>
            <WLJSHeader List={ExtensionsJS}/>  
            <WLJSTransportScript TwoKernels={False} PrefixMode={$Env["wsprefix"]} Port={$Env["ws"]}/>     
            <WebUIInitializationScript/>
            <ExtensionsStyles/>
        </Head>  
        <body class="h-full owin:border owin:border-slate-400"> 
        <WebUIOnLoad Event={OnLoad}/>
        <ExtensionTemplates Template={"AppHead"} />
        <div>
          <Modals CachedClient={cachedClient} ModalsPort={ModalController} ElectronQ={isElectron}/>
          
          <div id="frame">
            <div class="h-full flex flex-col">          
              <Notifications CachedClient={cachedClient} MessagePort={GlobalMessanger} ElectronQ={isElectron}/>
              <Settings Parameters={GlobalParameters} Modals={ModalController} AppEvents={AppEvent} Messanger={GlobalMessanger} Controls={GlobalControls} ExtensionTemplateInjection={ExtensionTemplates}/>
            </div> 
          </div>
        </div>
        <SettingsScript Parameters={GlobalParameters} Modals={ModalController} AppEvents={AppEvent} Messanger={GlobalMessanger} Controls={GlobalControls} ExtensionTemplateInjection={ExtensionTemplates}/>
        <ExtensionTemplates Template={"AppScripts"} />
        </body>
    </html>
];


http["MessageHandler", "Settings"] = AssocMatchQ[<|"Path" -> "/settings"|>] -> App;
Print["Settings Loaded!"];



